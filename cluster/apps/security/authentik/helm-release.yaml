---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: authentik
  namespace: security
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://charts.goauthentik.io
      chart: authentik
      version: 2.1.0
      sourceRef:
        kind: HelmRepository
        name: authentik-charts
        namespace: flux-system
      interval: 5m
  values:
    fullnameOverride: authentik
    image:
      name: ghcr.io/goauthentik/server
      tag: 2021.7.3
      pullPolicy: IfNotPresent

    ingress:
      main:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          # traefik.ingress.kubernetes.io/router.middlewares: "networking-cloudflare-ips@kubernetescrd"
          # external-dns/is-public: "true"
          # external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
        hosts:
        - host: "id.${SECRET_DOMAIN}"
          paths:
          - path: "/"
            pathType: Prefix
        tls:
        - hosts:
          - "id.${SECRET_DOMAIN}"

    authentik:
      secret_key: "${SECRET_AUTHENTIK_SECRET_KEY}"
      log_level: debug

      outposts:
        docker_image_base: ghcr.io/goauthentik/%(type)s:%(version)s

      postgresql:
        host: '{{ .Release.Name }}-postgresql'
        name: authentik
        user: authentik
        password: "${SECRET_AUTHENTIK_POSTGRES_PASSWORD}"
      redis:
        host: '{{ .Release.Name }}-redis-master'
        password: "${AUTHENTIK_REDIS_PASSWORD}"

    postgresql:
      enabled: true
      persistence:
        enabled: true
        existingClaim: authentik-postgresql

      postgresqlUsername: authentik
      postgresqlDatabase: authentik
      postgresqlPassword: "${SECRET_AUTHENTIK_POSTGRES_PASSWORD}"

    redis:
      enabled: true
      auth:
        enabled: true
        password: "${AUTHENTIK_REDIS_PASSWORD}"
     
      #outposts:
      #  docker_image_base: beryju.org/authentik/outpost-%(type)s:gh-%(build_hash)s

      # email:
      #   host: "smtp.sendgrid.net"
      #   port: 587
      #   use_tls: true
      #   username: "apikey"
      #   password: "${SECRET_SENDGRID_API_KEY}"
      #   from: "no-reply@${SECRET_DOMAIN}"
    # # persistence:
    # #   media:
    # #     enabled: true
    # #     mountPath: /media
    # #     storageClass: rook-ceph-block
    # #     accessMode: ReadWriteOnce
    # #     size: 5Gi
    # volumeMounts:
    # - name: media
    #   mountPath: /media
    # volumes:
    # - name: media
    #   persistentVolumeClaim:
    #     claimName: authentik-media-v1