---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: vaultwarden
  namespace: security
spec:
  releaseName: vaultwarden
  interval: 5m
  chart:
    spec:
      chart: vaultwarden
      version: 4.2.2
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
      interval: 5m
  values:
    # podSecurityContext:
    #   runAsUser: 568
    #   runAsGroup: 568
    #   fsGroup: 568
    nameOverride: vaultwarden
    fullnameOverride: vaultwarden
    image:
      repository: ghcr.io/k8s-at-home/vaultwarden
      tag: v1.25.0
    env:
      DATA_FOLDER: "config"
      ICON_CACHE_FOLDER: "config/icon_cache"
      ATTACHMENTS_FOLDER: "config/attachments"
      SENDS_FOLDER: "config/sends"
      SIGNUPS_ALLOWED: false
      WEBSOCKET_ENABLED: true
      WEBSOCKET_ADDRESS: 0.0.0.0
      WEBSOCKET_PORT: 3012
      DOMAIN: https://bitwarden.${SECRET_DOMAIN}
      ADMIN_TOKEN: ${SECRET_VAULTWARDEN_ADMIN_TOKEN}
      SMTP_HOST: "${SECRET_VAULTWARDEN_EMAIL_HOST}"
      SMTP_FROM: "${SECRET_VAULTWARDEN_EMAIL_ADDR}"
      SMTP_FROM_NAME: "${SECRET_VAULTWARDEN_EMAIL_FROM}"
      SMTP_SSL: true
      SMTP_PORT: 587
      SMTP_USERNAME: "${SECRET_VAULTWARDEN_EMAIL_USER}"
      SMTP_PASSWORD: "${SECRET_VAULTWARDEN_EMAIL_KEY}"
      YUBICO_CLIENT_ID: "${SECRET_YUBICO_CLIENT_ID}"
      YUBICO_SECRET_KEY: "${SECRET_YUBICO_SECRET_KEY}"
    ingress:
      main:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: "networking-cloudflare-ips@kubernetescrd"
          hajimari.io/enable: "true"
          hajimari.io/icon: "shield-key"
          hajimari.io/appName: "vaultwarden"
          # external-dns/is-public: "true"
          # external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
        hosts:
        - host: "bitwarden.${SECRET_DOMAIN}"
          paths:
          - path: /
            pathType: Prefix
          - path: /notifications/hub
            pathType: Prefix
            service:
              port: 3012
          - path: /notifications/hub/negotiate
            pathType: Prefix
        tls:
        - hosts:
          - "bitwarden.${SECRET_DOMAIN}"
      admin:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: "networking-rfc1918@kubernetescrd"
        hosts:
        - host: "bitwarden.${SECRET_DOMAIN}"
          paths:
          - path: /admin
            pathType: Prefix
        tls:
        - hosts:
          - "bitwarden.${SECRET_DOMAIN}"
    persistence:
      config:
        enabled: true
        existingClaim: vaultwarden-config-v1
      backup-scratch:
        enabled: true
        type: emptyDir

      vaultwarden-sh:
        enabled: true
        type: custom
        mountPath: /etc/vaultwarden.sh 
        subPath: vaultwarden.sh 
        volumeSpec:
          configMap:
            name: vaultwarden-init-script
            items:
              - key: vaultwarden.sh
                path: vaultwarden.sh
    podAnnotations:
      backup.velero.io/backup-volumes: config
      # pre.hook.backup.velero.io/container: fsfreeze
      # pre.hook.backup.velero.io/command: '["/sbin/fsfreeze", "--freeze", "/config"]'
      # post.hook.backup.velero.io/container: fsfreeze
      # post.hook.backup.velero.io/command: '["/sbin/fsfreeze", "--unfreeze", "/config"]'
      # secret.reloader.stakater.com/reload: "vaultwarden"
    resources:
      requests:
        memory: 100Mi
        cpu: 100m
      limits:
        memory: 2000Mi
    # additionalContainers:
    #   fsfreeze:
    #     name: fsfreeze
    #     image: ghcr.io/k8s-at-home/fsfreeze:v2.37-r0
    #     volumeMounts:
    #       - name: config
    #         mountPath: /config
    #     securityContext:
    #       privileged: true
