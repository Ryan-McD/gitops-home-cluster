---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: airsonic
  namespace: media
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      chart: airsonic
      version: 6.1.0
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
      interval: 5m
  values:
    image:
      repository: docker.io/airsonicadvanced/airsonic-advanced
      tag: edge-11.0.0-SNAPSHOT.20211119194245
      pullPolicy: IfNotPresent
    podSecurityContext:
      runAsUser: 2000
      runAsGroup: 2000
      # Run Once for /var/airsonic/transcode permissions issues      
      fsGroup: 2000
      # fsGroupChangePolicy: "OnRootMismatch"
      supplementalGroups:
      - 100
      - 65540
    env:
      TZ: "America/New_York"
      JAVA_OPTS: "-Xms256m -Xmx512m -Dserver.forward-headers-strategy=native -Dserver.servlet.session.timeout=2880m"
    enableServiceLinks: false
    persistence:
      config:
        enabled: true
        existingClaim: airsonic-config-v1
        mountPath: /var/airsonic
      podcasts:
        enabled: true
        storageClass: rook-ceph-block
        accessMode: ReadWriteOnce
        mountPath: /var/podcasts
        size: 7Gi
      media-nas:
        enabled: true
        existingClaim: nfs-media-nas-pvc
        subPath:
          - path: Music/Old
            mountPath: /var/music
            readOnly: true
          - path: ${SECRET_NEW_MUSIC}
            mountPath: /var/new
            readOnly: true
          - path: Music/Classical
            mountPath: /var/Classical
            readOnly: true
    ingress:
      main:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: "networking-cloudflare-ips@kubernetescrd"
          hajimari.io/enable: "true"
          hajimari.io/icon: "headphones-box"
        #   external-dns/is-public: "true"
        #   external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
        hosts:
        - host: "as.${SECRET_DOMAIN}"
          paths:
          - path: /
            pathType: Prefix
        tls:
        - hosts:
          - "as.${SECRET_DOMAIN}"
    podAnnotations:
      backup.velero.io/backup-volumes: config
      # pre.hook.backup.velero.io/container: fsfreeze
      # pre.hook.backup.velero.io/command: '["/sbin/fsfreeze", "--freeze", "/config"]'
      # post.hook.backup.velero.io/container: fsfreeze
      # post.hook.backup.velero.io/command: '["/sbin/fsfreeze", "--unfreeze", "/config"]'
    resources:
      requests:
        memory: "768M"
      limits:
        memory: "2048M"
    # additionalContainers:
    #   fsfreeze:
    #     name: fsfreeze
    #     image: ghcr.io/k8s-at-home/fsfreeze:v2.37-r0
    #     volumeMounts:
    #       - name: config
    #         mountPath: /config
    #     securityContext:
    #       privileged: true
